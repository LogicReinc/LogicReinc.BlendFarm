<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="950"
        x:Class="LogicReinc.BlendFarm.Windows.RenderWindow"
        xmlns:convs="clr-namespace:LogicReinc.BlendFarm.Converters;assembly=LogicReinc.BlendFarm"
        Title="BlendFarm by LogicReinc">
  <Window.Styles>
    <StyleInclude Source="avares://Avalonia.Themes.Default/Accents/BaseDark.xaml" />
    <Style Selector="TabItem:selected">
      <Setter Property="Background" Value="#332a54"/>
    </Style>
    <Style Selector="ListBoxItem:selected">
      <Setter Property="Background" Value="#332a54"/>
    </Style>
  </Window.Styles>

  <Grid ColumnDefinitions="*, 400" RowDefinitions="*">
    <Grid Grid.Row="0" Grid.Column="0" RowDefinitions="50,*,10" ColumnDefinitions="*">
      <Grid Grid.Row="0" Grid.Column="0" RowDefinitions="*" ColumnDefinitions="*,35,50">

        
        <ListBox Items="{Binding Projects}" BorderBrush="Transparent" Padding="0,0,0,0" SelectionChanged="ProjectTabChanged" SelectedIndex="{Binding TabScrollIndex}" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Hidden">
          <ListBox.Styles>
            <Style Selector="ListBoxItem:selected /template/ContentPresenter">
              <Setter Property="Background" Value="#332a54" />
            </Style>
          </ListBox.Styles>
          <ListBox.ItemsPanel>
            <ItemsPanelTemplate>
                <StackPanel Orientation="Horizontal" />
            </ItemsPanelTemplate>
          </ListBox.ItemsPanel>
          <ListBox.ItemTemplate>
            <DataTemplate>
              <Button Content="{Binding Name}" Height="45" Padding="10,10,10,10" VerticalAlignment="Center" Command="{Binding SelectProject}" BorderBrush="Transparent" Background="Transparent"></Button>
            </DataTemplate>
          </ListBox.ItemTemplate>
        </ListBox>

        <!--
        <TabControl Items="{Binding Projects}" SelectionChanged="ProjectTabChanged" SelectedIndex="{Binding TabScrollIndex}">
          <TabControl.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel>
                <ScrollViewer HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Disabled" />
              </StackPanel>
            </ItemsPanelTemplate>
          </TabControl.ItemsPanel>
          <TabControl.ItemTemplate>
            <DataTemplate>
              <Button Content="{Binding Name}" Height="45" Padding="10,10,10,10" VerticalAlignment="Center" Command="{Binding SelectProject}" BorderBrush="Transparent" Background="Transparent"></Button>
            </DataTemplate>
          </TabControl.ItemTemplate>
          <TabControl.ContentTemplate>
            <DataTemplate>
              <StackPanel></StackPanel>
            </DataTemplate>
          </TabControl.ContentTemplate>
        </TabControl>-->
        


        <Grid Grid.Row="0" Grid.Column="1" RowDefinitions="1*,1*">
          <Button Grid.Row="0" Background="Transparent" BorderBrush="Transparent" Command="{Binding ScrollLeft}" IsVisible="{Binding CanTabScrollLeft}">
            <Image Source="/Icons/menu-left-outline.png" />
          </Button>
          <Button Grid.Row="1" Background="Transparent" BorderBrush="Transparent" Command="{Binding ScrollRight}" IsVisible="{Binding CanTabScrollRight}">
            <Image Source="/Icons/menu-right-outline.png" />
          </Button>
        </Grid>
        <Button Grid.Row="0" Grid.Column="2" Background="#332a54" FontSize="20" FontWeight="Bold" BorderBrush="Transparent" Command="{Binding OpenProjectDialog}">
          +
        </Button>
      </Grid>
      <Image x:Name="render"
            
            Source="{Binding CurrentProject.LastBitmap}"
            Grid.Row="1"
            Grid.Column="0">
      </Image>
      <ProgressBar
            IsVisible="{Binding CurrentProject.IsRendering}"
            x:Name="renderProgress"
            Grid.Column="0"
            Grid.Row="2"></ProgressBar>
    </Grid>

    <!--Right Panel-->
    <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalAlignment="Top"
            Grid.Row="0" Grid.Column="1"
            Background="#222222">
      <StackPanel Orientation="Vertical">
        <DockPanel>
          <StackPanel Margin="20,0,20,20" DockPanel.Dock="Top">
            <StackPanel Margin="20,20,20,5" Orientation="Horizontal">
              <Button Padding="0" BorderThickness="0" Background="#111111" Command="{Binding Github}">
                <Image Source="/Icons/github.png" Width="150" Height="25"></Image>
              </Button>
              <Button Padding="0" BorderThickness="0" Command="{Binding Patreon}">
                <Image Source="/Icons/patreon.png" Width="150"></Image>
              </Button>
            </StackPanel>
            <StackPanel Margin="20,0,40,10" Orientation="Vertical">
              <Button Height="25" Padding="0,5,0,5" BorderThickness="0" Background="#111111" Command="{Binding Help}">
                Help!
              </Button>
            </StackPanel>

            <StackPanel Orientation="Horizontal">
              <TextBlock Width="60" Margin="0,0,15,0" TextAlignment="Right">Version:</TextBlock>
              <TextBlock Width="240"  Text="{Binding Version.Name}"></TextBlock>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
              <TextBlock Width="60" Margin="0,0,15,0" TextAlignment="Right">File:</TextBlock>
              <TextBlock Width="240"  Text="{Binding CurrentProject.BlendFile}"></TextBlock>
            </StackPanel>

            <Canvas Height="0" Margin="0,10,0,0">
              <StackPanel Orientation="Horizontal" Canvas.Right="30" Canvas.Top="4">
                <TextBlock Margin="0,7,10,0">
                  Use Queue
                </TextBlock>
                <ToggleSwitch Checked="CheckUseQueue" Unchecked="CheckUseQueue"></ToggleSwitch>
              </StackPanel>
            </Canvas>

            <TabControl Margin="0,0,0,0" SelectedIndex="0">
              <TabItem Header="Render">
                <!--BEGIN RENDER-->
                <StackPanel Orientation="Vertical">
                  <StackPanel Margin="0,10,0,0">
                    <TextBlock>Render Nodes</TextBlock>
                    <!--RenderNodes -->
                    <ListBox Margin="0,10,10,10" x:Name="listNodes" Items="{Binding Nodes}" Height="300">
                      <ListBox.ItemTemplate>
                        <DataTemplate>
                          <StackPanel Height="60">
                            <StackPanel Orientation="Horizontal" Height="50">
                              <StackPanel Orientation="Vertical" Width="100" Margin="5,0,0,0" VerticalAlignment="Center">
                                <!--RenderNode Name -->
                                <TextBlock Width="100" HorizontalAlignment="Left" Foreground="#AAAAAA" FontWeight="Bold" Text="{Binding Name}" IsVisible="{Binding !Connected}"/>
                                <TextBlock Width="100" HorizontalAlignment="Left" Foreground="#AAAA00" FontWeight="Bold" Text="{Binding Name}">
                                  <TextBlock.IsVisible>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                      <Binding Path="!IsSynced"></Binding>
                                      <Binding Path="Connected"></Binding>
                                    </MultiBinding>
                                  </TextBlock.IsVisible>
                                </TextBlock>
                                <TextBlock Width="100" HorizontalAlignment="Left" Foreground="#00AA00" FontWeight="Bold" Text="{Binding Name}">
                                  <TextBlock.IsVisible>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                      <Binding Path="IsSynced"></Binding>
                                      <Binding Path="Connected"></Binding>
                                    </MultiBinding>
                                  </TextBlock.IsVisible>
                                </TextBlock>
                                <!--RenderNode Address -->
                                <TextBlock Width="100" Text="{Binding Address}" HorizontalAlignment="Left" FontWeight="Thin"></TextBlock>
                              </StackPanel>
                              <!--RenderNode Status -->
                              <StackPanel Orientation="Vertical" Width="140" Margin="5,0,0,0" VerticalAlignment="Center">
                                <TextBlock Width="130" Margin="10,0,0,0" Text="{Binding Activity}" ToolTip.Tip="{Binding Activity}" HorizontalAlignment="Left" FontWeight="Thin" FontSize="10"></TextBlock>
                                <TextBlock Width="130" Margin="10,0,0,0" Foreground="#FF3333" Text="{Binding Exception}" ToolTip.Tip="{Binding Exception}" IsVisible="{Binding Exception, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" HorizontalAlignment="Left" FontWeight="Thin" FontSize="12"></TextBlock>
                              </StackPanel>

                              <!--RenderNode Buttons -->
                              <StackPanel Orientation="Horizontal">
                                <Grid>
                                  <Button Width="50" Height="30" Grid.Column="0"
                                      Background="#00000000"
                                      BorderThickness="0"
                                      IsEnabled="{Binding Activity, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                                      IsVisible="{Binding Connected}}"
                                      Command="{Binding Disconnect}">
                                    <Image Source="/Icons/radioOn.png" Height="30" Width="30" />
                                  </Button>
                                  <Button Grid.Column="0"
                                    Margin="5,0,0,0"
                                    Background="#00000000"
                                      BorderThickness="0"
                                      IsEnabled="{Binding Activity, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                                      IsVisible="{Binding !Connected}"
                                      Command="{Binding ConnectAndPrepare}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.Version.Name}">
                                    <Image Source="/Icons/radioOff.png" Height="30" Width="30" />
                                  </Button>
                                </Grid>
                                <Button
                                  Margin="5,0,0,0"
                                  Background="#00000000"
                                    BorderThickness="0"
                                    IsVisible="{Binding !Connected}"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DeleteNode}"
                                    CommandParameter="{Binding .}">
                                  <Image Source="/Icons/delete.png" Height="30" Width="30" />
                                </Button>
                                <Button
                                  Margin="5,0,0,0"
                                  Background="#00000000"
                                    BorderThickness="0"
                                    IsVisible="{Binding Connected}"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ConfigureNode}"
                                    CommandParameter="{Binding .}">
                                  <Image Source="/Icons/gear.png" Height="30" Width="30" />
                                </Button>
                              </StackPanel>
                            </StackPanel>
                            <ProgressBar IsIndeterminate="{Binding !HasActivityProgress}" Value="{Binding ActivityProgress}" Height="1" Margin="0,2,0,0" IsVisible="{Binding !IsIdle}"></ProgressBar>

                          </StackPanel>
                        </DataTemplate>
                      </ListBox.ItemTemplate>
                    </ListBox>


                    <StackPanel Orientation="Horizontal">
                      <Button Width="175" Command="{Binding ConnectAll}">Connect All</Button>
                      <Button Width="175" Command="{Binding SyncAll}">Sync All</Button>
                    </StackPanel>


                    <StackPanel Margin="0,15,0,10">
                      <TextBlock TextAlignment="Left">New Node</TextBlock>

                      <StackPanel Orientation="Horizontal">
                        <TextBox Width="130" Watermark="Name" x:Name="inputClientName" Text="{Binding InputClientName}"></TextBox>
                        <TextBox Width="230" Watermark="Address (eg. 192.168.1.53:1234)" x:Name="inputClientAddress" Text="{Binding InputClientAddress}"></TextBox>
                      </StackPanel>

                      <Button Margin="0,10,0,0"
                          Command="{Binding AddNewNode}"
                          IsEnabled="{Binding ElementName=inputClientAddress, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">Connect New</Button>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                      <CheckBox IsChecked="{Binding UseAutomaticPerformance}">
                        Use Automatic Performance
                      </CheckBox>
                      <CheckBox IsChecked="{Binding UseSyncCompression}" Margin="10,0,0,0">
                        Use Sync Compression
                      </CheckBox>
                    </StackPanel>
                  </StackPanel>
                  <StackPanel DockPanel.Dock="Bottom">
                    <TabControl SelectedIndex="0">
                      <TabItem Header="Image" Margin="10,0,0,0">
                        <StackPanel Background="#1F1F1F">
                          <StackPanel Margin="10,20,10,10">
                            <StackPanel Orientation="Horizontal">
                              <TextBlock Width="60" TextAlignment="Right" Margin="10">Width:</TextBlock>
                              <NumericUpDown Width="80" Value="{Binding CurrentProject.RenderWidth}" />
                              <TextBlock Width="60" TextAlignment="Right" Margin="10">Height:</TextBlock>
                              <NumericUpDown Width="80" Value="{Binding CurrentProject.RenderHeight}" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                              <TextBlock Width="60" TextAlignment="Right" Margin="10">Samples</TextBlock>
                              <NumericUpDown Width="80" Value="{Binding CurrentProject.Samples}" />
                              <TextBlock Width="60" TextAlignment="Right" Margin="10" ToolTip.Tip="Denoiser to use, Inherit means the one selected in Blendfile.">
                                Denoiser
                              </TextBlock>
                              <ComboBox SelectedIndex="0" Width="80" Items="{Binding DenoiserOptions}" SelectedItem="{Binding CurrentProject.Denoiser}">
                              </ComboBox>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                              <TextBlock Width="110" TextAlignment="Right" Margin="10">Last Render Time:</TextBlock>
                              <TextBlock x:Name="lastRenderTime" Width="90" Margin="10">...</TextBlock>
                              <CheckBox IsChecked="{Binding CurrentProject.UseWorkaround}" ToolTip.Tip="Workaround for a Blender bug, once fixed, it may cause odd tile order, then disable this">Workaround</CheckBox>
                            </StackPanel>
                          </StackPanel>
                          <StackPanel IsVisible="{Binding !IsQueueing}">
                            <Button Margin="10,3,10,5" IsVisible="{Binding !CurrentProject.IsRendering}" Command="{Binding Render}" Background="#400083" BorderBrush="#200041">
                              Render
                            </Button>
                            <Button Margin="10,0,10,5" IsVisible="{Binding CurrentProject.IsRendering}" Command="{Binding CancelRender}" Background="#AA0000" BorderBrush="#200041">
                              Cancel
                            </Button>
                          </StackPanel>
                          <StackPanel IsVisible="{Binding IsQueueing}">
                            <Button Margin="10,3,10,0" Command="{Binding AddToQueueReplace}" Background="#400083" BorderBrush="#200041">
                              Add to Queue (Replace)
                            </Button>
                            <Button Margin="10,2,10,5" Command="{Binding AddToQueueNew}" Background="#400083" BorderBrush="#200041">
                              Add to Queue (New)
                            </Button>
                          </StackPanel>
                          <Button Margin="10,0,10,10" Command="{Binding SaveImage}" Background="#400083" BorderBrush="#200041">
                            Save Image
                          </Button>
                          <Button Margin="10,-5,10,5" Command="{Binding SaveAsDefault}" Background="#400083" BorderBrush="#200041">
                            Save Current Settings as Default
                          </Button>
                        </StackPanel>
                      </TabItem>
                      <TabItem Header="Animation">
                        <StackPanel Margin="10,20,10,10" Background="#1F1F1F">
                          <TextBlock TextWrapping="Wrap" Margin="10">Render an animation to a directory</TextBlock>
                          <StackPanel Orientation="Horizontal">
                            <TextBlock Width="90" TextAlignment="Right" Margin="10">File Format</TextBlock>
                            <TextBox Width="235" Text="{Binding CurrentProject.AnimationFileFormat}" />
                          </StackPanel>
                          <StackPanel Orientation="Horizontal">
                            <TextBlock Width="90" TextAlignment="Right" Margin="10" ToolTip.Tip="Frame to start at">Frame Start</TextBlock>
                            <NumericUpDown Width="80" Value="{Binding CurrentProject.FrameStart}" />
                            <TextBlock Width="55" TextAlignment="Right" Margin="10" ToolTip.Tip="Frame to end at">Frame End</TextBlock>
                            <NumericUpDown Width="80" Value="{Binding CurrentProject.FrameEnd}" />
                          </StackPanel>
                          <StackPanel Orientation="Horizontal">
                            <CheckBox Width="90" Margin="10" HorizontalContentAlignment="Right" IsChecked="{Binding CurrentProject.UseFPS}">FPS</CheckBox>
                            <NumericUpDown Width="80" Value="{Binding CurrentProject.FPS}" IsEnabled="{Binding CurrentProject.UseFPS}" />
                          </StackPanel>
                          <StackPanel IsVisible="{Binding !IsQueueing}">
                            <Button Margin="10,10,10,5" IsVisible="{Binding !CurrentProject.IsRendering}" Command="{Binding RenderAnimation}" Background="#400083" BorderBrush="#200041">
                              Render Animation
                            </Button>
                            <Button Margin="10,0,10,5" IsVisible="{Binding CurrentProject.IsRendering}" Command="{Binding CancelRender}" Background="#AA0000" BorderBrush="#200041">
                              Cancel
                            </Button>
                          </StackPanel>
                          <StackPanel IsVisible="{Binding IsQueueing}">
                            <Button Margin="10,10,10,5" Command="{Binding AddAnimationToQueueNew}" Background="#400083" BorderBrush="#200041">
                              Queue Animation Render (New)
                            </Button>
                          </StackPanel>
                        </StackPanel>
                      </TabItem>
                      <TabItem Header="Live Render" IsEnabled="{Binding !IsQueueing}">
                        <StackPanel Margin="10,20,10,10" Background="#1F1F1F">
                          <TextBlock TextWrapping="Wrap" Margin="10" Width="300">
                            Live render will re-render the file whenever it changes (with settings from Image tab), it can only be used with a single project open and no queue.
                          </TextBlock>
                          <Button Margin="10,10,10,5" IsVisible="{Binding !IsLiveChanging}" Command="{Binding StartLiveRender}" Background="#400083" BorderBrush="#200041">
                            Start Live Render
                          </Button>
                          <Button Margin="10,0,10,5" IsVisible="{Binding IsLiveChanging}" Command="{Binding StopLiveRender}" Background="#AA0000" BorderBrush="#200041">
                            Stop Live Render
                          </Button>
                        </StackPanel>
                      </TabItem>
                      <TabItem Header="System">
                        <StackPanel Orientation="Vertical">
                          <StackPanel Orientation="Horizontal">
                            <TextBlock Width="90" TextAlignment="Right" Margin="10" ToolTip.Tip="The strategy to render the image. Splitted is fastest, but less real-time preview. SplitChunked has real-time tiles updating but has some overhead. Chunked is slow, but allows rendernodes to consume work as available.">
                              Render Strategy
                            </TextBlock>
                            <ComboBox SelectedIndex="0" Width="105" x:Name="selectStrategy" />
                            <TextBlock Width="30" TextAlignment="Right" Margin="10" ToolTip.Tip="Order to render tiles, only relevant for Chunked and SplitChunked">Order</TextBlock>
                            <ComboBox SelectedIndex="0" Width="80" x:Name="selectOrder" />
                          </StackPanel>
                          <StackPanel Orientation="Horizontal">
                            <TextBlock Width="90" TextAlignment="Right" Margin="10" ToolTip.Tip="Chunksize for Chunked and SplitChunked, may be modified in certain scenarios">ChunkSize</TextBlock>
                            <NumericUpDown Width="80" Value="{Binding CurrentProject.ChunkSize}" />

                            <TextBlock Width="55" TextAlignment="Right" Margin="10" ToolTip.Tip="Which engine to use. Optix will adhere to CUDA settings. Otherwise CPU is used.">
                              Engine
                            </TextBlock>
                            <ComboBox x:Name="selectRenderType" Margin="0,0,0,0" Items="{Binding EngineOptions}" SelectedItem="{Binding CurrentProject.Engine}" FontSize="15"></ComboBox>
                            <!--<CheckBox IsChecked="{Binding CurrentProject.UseEevee}" /> -->
                          </StackPanel>
                          <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal">
                              <TextBlock Width="110" TextAlignment="Right" Margin="10" ToolTip.Tip="Use a network location instead of transfering over TCP (Allows for shared resources)">
                                Use Networked Path
                              </TextBlock>
                              <CheckBox IsChecked="{Binding CurrentProject.UseNetworkedPath}" />
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Background="#1A1A1A"  IsVisible="{Binding CurrentProject.UseNetworkedPath}">
                              <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                                <TextBlock Width="90" TextAlignment="Right" Margin="10">Windows Path</TextBlock>
                                <TextBox Width="220" Text="{Binding CurrentProject.NetworkPathWindows}"></TextBox>
                                <Button IsVisible="{Binding IsWindows}" Command="{Binding SelectNetworkWindowsPath}">...</Button>
                              </StackPanel>
                              <StackPanel Orientation="Horizontal" Margin="0,00,0,0">
                                <TextBlock Width="90" TextAlignment="Right" Margin="10">Linux Path</TextBlock>
                                <TextBox Width="220" Text="{Binding CurrentProject.NetworkPathLinux}"></TextBox>
                                <Button IsVisible="{Binding IsLinux}" Command="{Binding SelectNetworkLinuxPath}">...</Button>
                              </StackPanel>
                              <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <TextBlock Width="90" TextAlignment="Right" Margin="10">MacOS Path</TextBlock>
                                <TextBox Width="220" Text="{Binding CurrentProject.NetworkPathMacOS}"></TextBox>
                                <Button IsVisible="{Binding IsMacOS}" Command="{Binding SelectNetworkMacOSPath}">...</Button>
                              </StackPanel>
                            </StackPanel>
                          </StackPanel>
                        </StackPanel>
                      </TabItem>
                    </TabControl>
                  </StackPanel>
                
                </StackPanel>
                <!--END RENDER-->
              </TabItem>
              <TabItem Header="{Binding QueueName}" IsEnabled="{Binding IsQueueing}">
                <!--BEGIN QUEUE-->
                <ListBox Items="{Binding Queue}">
                  <ListBox.ItemTemplate>
                    <DataTemplate>
                      <Canvas Height="60">
                        <StackPanel Height="60" Canvas.Top="0" Canvas.Left="0">
                          <StackPanel Orientation="Horizontal" Height="50">
                            <StackPanel Orientation="Vertical" Width="100" Margin="5,0,0,0" VerticalAlignment="Center">
                              <!--RenderNode Name -->
                              <TextBlock Text="{Binding Name}" IsVisible="{Binding Active}" Width="250" HorizontalAlignment="Left" Foreground="#AAAAAA" FontWeight="Bold" FontSize="15"/>
                              <TextBlock Text="{Binding Name}" IsVisible="{Binding Completed}" Width="250" HorizontalAlignment="Left" Foreground="#00AA00" FontWeight="Bold" FontSize="15"/>
                              <TextBlock Text="{Binding Name}" IsVisible="{Binding Cancelled}" Width="250" HorizontalAlignment="Left" Foreground="#AA0000" FontWeight="Bold" FontSize="15"/>
                              <TextBlock Width="250" HorizontalAlignment="Left" Foreground="#AAAAAA" Text="{Binding State}"/>
                            </StackPanel>

                          </StackPanel>
                          <ProgressBar Width="350" IsIndeterminate="{Binding IsQueued}" IsVisible="{Binding Active}" Value="{Binding ProgressPercentage}" Height="1" Margin="0,2,0,0"></ProgressBar>

                        </StackPanel>
                        <Button Width="50" Height="30" Grid.Column="0" IsVisible="{Binding Completed}"
                            Canvas.Top="10"
                            Canvas.Right="70"
                            Background="#00000000"
                            BorderThickness="0"
                            FontSize="13"
                            Foreground="#00FF33"
                            Command="{Binding OpenQueueItem}">
                          Open
                        </Button>
                        <Button Width="50" Height="30" Grid.Column="0"  IsVisible="{Binding IsCancelable}"
                            Canvas.Top="10"
                            Canvas.Right="10"
                            Background="#00000000"
                            BorderThickness="0"
                            FontSize="13"
                            Foreground="#FF3333"
                            Command="{Binding CancelQueueItem}">
                            Cancel
                        </Button>
                        <Button Width="50" Height="30" Grid.Column="0"  IsVisible="{Binding IsDeletable}"
                            Canvas.Top="10"
                            Canvas.Right="10"
                            Background="#00000000"
                            BorderThickness="0"
                            FontSize="13"
                            Foreground="#FF3333"
                            Command="{Binding DeleteQueueItem}">
                          Delete
                        </Button>
                      </Canvas>
                    </DataTemplate>
                  </ListBox.ItemTemplate>
                </ListBox>
                <!--END QUEUE-->
              </TabItem>
            </TabControl>
          </StackPanel>
          
        </DockPanel>

      </StackPanel>
    </ScrollViewer>
  </Grid>

</Window>
